version: '3'

services:
  django.staging:
    build:
      context: ..
      dockerfile: Dockerfile
    volumes:
      - ..:/app
      - static-vol:/app/staticfiles
    command: >
      sh -c "
        python manage.py collectstatic --noinput --clear &&
        python manage.py migrate &&
        gunicorn -w 5 --timeout 9000 -b 0.0.0.0:8000 core.wsgi:application
        "
    depends_on:
      - redis.staging
    env_file: ./env_files/staging.env
  
  beat.staging:
    build:
      context: ..
      dockerfile: Dockerfile
    volumes:
      - ..:/app
      - static-vol:/app/staticfiles
    command: > 
      sh -c "
        celery -A core beat -l info" 
    depends_on:
      - django.staging
      - redis.staging
    env_file: ./env_files/staging.env

  worker.staging:
    build:
      context: ..
      dockerfile: Dockerfile
    volumes:
      - ..:/app
      - static-vol:/app/staticfiles
    command: >
      sh -c "
        celery -A core worker -l info
        "
    depends_on:
      - django.staging
      - redis.staging
    env_file: ./env_files/staging.env

  
  redis.staging:
    image: redis
    entrypoint: ["sh", "-c", "redis-server --save '' --appendonly no & sleep 5 && redis-cli -h localhost FLUSHDB && redis-cli -h localhost FLUSHALL && tail -f /dev/null"]
    restart: unless-stopped 
  
  nginx.staging:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.staging.conf:/etc/nginx/nginx.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - django.staging
  
  certbot.staging:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email tech@purplme.com -d wallet-stg-apis.purplme.com --agree-tos --keep-until-expiring
    env_file:
      - ./env_files/staging.env
    depends_on:
      - nginx.staging

volumes:
  postgres_data: {}
  static-vol: {}
