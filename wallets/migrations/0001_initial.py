# Generated by Django 5.2.1 on 2025-05-27 10:50

from decimal import Decimal

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('utilities', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, unique=True)),
                (
                    'description',
                    models.TextField(blank=True, help_text='Description of the tier and its benefits', null=True),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Tier',
                'verbose_name_plural': 'Tiers',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ATMCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Unique ATM code', max_length=6, unique=True)),
                ('is_used', models.BooleanField(default=False, help_text='Indicates if the ATM code is active')),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'user',
                    models.ForeignKey(
                        help_text='User associated with the ATM code',
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='atm_codes',
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                'verbose_name': 'ATM Code',
                'verbose_name_plural': 'ATM Codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TierCurrencyLimit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('daily_withdrawal_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                ('daily_transfer_limit', models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    'daily_transactions_limit',
                    models.IntegerField(
                        help_text='Maximum number of transactions allowed per day for this tier and currency'
                    ),
                ),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'currency',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='tier_limits', to='utilities.currency'
                    ),
                ),
                (
                    'tier',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='currency_limits', to='wallets.tier'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Tier Currency Limit',
                'verbose_name_plural': 'Tier Currency Limits',
                'ordering': ['tier__name', 'currency__currency_code'],
            },
        ),
        migrations.AddField(
            model_name='tier',
            name='limits',
            field=models.ManyToManyField(
                help_text='Currencies for which this tier has specific limits',
                related_name='tiers',
                through='wallets.TierCurrencyLimit',
                to='utilities.currency',
            ),
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                (
                    'name',
                    models.CharField(blank=True, help_text='Optional name for the wallet', max_length=100, null=True),
                ),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                (
                    'transferred_today',
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal('0.00'),
                        help_text='Amount that has been transferred today from this wallet',
                        max_digits=12,
                    ),
                ),
                (
                    'withdrawn_today',
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal('0.00'),
                        help_text='Amount that has been withdrawn today from this wallet',
                        max_digits=12,
                    ),
                ),
                ('is_active', models.BooleanField(default=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                (
                    'currency',
                    models.ForeignKey(
                        help_text='Currency of the wallet',
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='wallets',
                        to='utilities.currency',
                    ),
                ),
                (
                    'user',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    'transaction_type',
                    models.CharField(
                        choices=[
                            ('DEPOSIT', 'Deposit'),
                            ('WITHDRAWAL', 'Withdrawal'),
                            ('TRANSFER_IN', 'Transfer In'),
                            ('TRANSFER_OUT', 'Transfer Out'),
                        ],
                        max_length=12,
                    ),
                ),
                (
                    'money_source',
                    models.CharField(
                        choices=[
                            ('BANK_TRANSFER', 'Bank Transfer'),
                            ('ATM', 'ATM/Cash'),
                            ('WALLET_TO_WALLET', 'Wallet to Wallet'),
                        ],
                        max_length=20,
                    ),
                ),
                ('reference', models.CharField(max_length=100)),
                (
                    'status',
                    models.CharField(
                        choices=[
                            ('PENDING', 'Pending'),
                            ('PROCESSING', 'Processing'),
                            ('DECLINED', 'Declined'),
                            ('COMPLETED', 'Completed'),
                            ('FAILED', 'Failed'),
                            ('EXPIRED', 'Expired'),
                            ('CANCELED', 'Canceled'),
                        ],
                        default='PENDING',
                        max_length=20,
                    ),
                ),
                ('description', models.TextField(null=True)),
                (
                    'extra_info',
                    models.JSONField(blank=True, help_text='Additional information about the transaction', null=True),
                ),
                ('expires_at', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                (
                    'related_wallet',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name='related_transactions',
                        to='wallets.wallet',
                    ),
                ),
                (
                    'wallet',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='wallets.wallet'
                    ),
                ),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-id'],
            },
        ),
        migrations.AddConstraint(
            model_name='tiercurrencylimit',
            constraint=models.UniqueConstraint(fields=('tier', 'currency'), name='unique_tier_currency_limit'),
        ),
        migrations.AddConstraint(
            model_name='tiercurrencylimit',
            constraint=models.CheckConstraint(
                condition=models.Q(('daily_withdrawal_limit__gte', Decimal('0.00'))),
                name='daily_withdrawal_limit_non_negative',
            ),
        ),
        migrations.AddConstraint(
            model_name='tiercurrencylimit',
            constraint=models.CheckConstraint(
                condition=models.Q(('daily_transfer_limit__gte', Decimal('0.00'))),
                name='daily_transfer_limit_non_negative',
            ),
        ),
        migrations.AddConstraint(
            model_name='tiercurrencylimit',
            constraint=models.CheckConstraint(
                condition=models.Q(('daily_transactions_limit__gte', 0)), name='daily_transactions_limit_non_negative'
            ),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['user', 'currency'], name='wallets_wal_user_id_49444d_idx'),
        ),
        migrations.AddConstraint(
            model_name='wallet',
            constraint=models.CheckConstraint(
                condition=models.Q(('balance__gte', Decimal('0.00'))), name='balance_non_negative'
            ),
        ),
        migrations.AddConstraint(
            model_name='wallet',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_wallet_name_per_user'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['wallet', 'transaction_type', 'status'], name='wallets_tra_wallet__aadd6b_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference'], name='wallets_tra_referen_6d0dd5_idx'),
        ),
        migrations.AddConstraint(
            model_name='transaction',
            constraint=models.CheckConstraint(
                condition=models.Q(('amount__gt', Decimal('0.00'))), name='amount_positive'
            ),
        ),
    ]
